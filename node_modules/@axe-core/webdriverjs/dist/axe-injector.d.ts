import type { AxeInjectorParams } from './types';
export default class AxeInjectorLegacy {
    private driver;
    private axeSource;
    private options;
    private config;
    private didLogError;
    constructor({ driver, axeSource, builderOptions, config }: AxeInjectorParams);
    /**
     * Checks to make sure that the error thrown was not a stale iframe
     * @param {Error} error
     * @returns {void}
     */
    private errorHandler;
    /**
     * Get axe-core source and configurations
     * @returns {String}
     */
    private get script();
    /**
     * Removes the `sandbox` attribute from iFrames
     * @returns {Promise<void>}
     */
    private sandboxBuster;
    /**
     * Injects into the provided `frame` and its child `frames`
     * @param {WebElement[]} framePath
     * @returns {Promise<void>}
     */
    private handleFrame;
    /**
     * Injects into all frames
     * @returns {Promise<void>}
     */
    injectIntoAllFrames(): Promise<void>;
}
